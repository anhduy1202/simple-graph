{"version":3,"file":"main.063b7aea11e3f287cfd6.hot-update.js","sources":["webpack:///./src/components/Canvas.tsx"],"sourcesContent":["import React, { createContext, useEffect, useRef, useState } from 'react';\nimport { NodeType } from './Node';\n\nexport interface CanvasType extends React.DetailedHTMLProps<React.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement> {}\n\nexport const graphContext = createContext<any>([]);\n\nexport const Canvas: React.FC<CanvasType> = (props) => {\n    const { children } = props;\n    const canvasRef = useRef<any>('');\n    const [myGraph, setGraph] = useState<NodeType[]>([]);\n    useEffect(() => {\n        setGraph(myGraph.filter((v, i, a) => a.findIndex((v2: NodeType) => v2.uuid === v.uuid) === i));\n    }, []);\n    return (\n        <graphContext.Provider value={[myGraph, setGraph]}>\n            <canvas id=\"myCanvas\" width={window.innerWidth} height={window.innerHeight} ref={canvasRef} {...props}></canvas>\n            {children}\n        </graphContext.Provider>\n    );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAKA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAbA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}