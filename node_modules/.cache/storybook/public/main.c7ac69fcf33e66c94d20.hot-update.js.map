{"version":3,"file":"main.c7ac69fcf33e66c94d20.hot-update.js","sources":["webpack:///./src/components/Canvas.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport React, { useRef } from 'react';\n\nexport interface CanvasType extends React.DetailedHTMLProps<React.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement> {\n    width?: string;\n    height?: string;\n}\n\nexport const Canvas: React.FC<CanvasType> = (props) => {\n    const { children, width, height } = props;\n    const canvasRef = useRef<any>('');\n    let _style: React.CSSProperties = {};\n    if (width) _style.width = width;\n    if (height) _style.color = height;\n\n    useEffect(() => {\n        const canvas: HTMLCanvasElement = canvasRef.current;\n    }, []);\n    return (\n        <>\n            <canvas id=\"myCanvas\" style={_style} ref={canvasRef} {...props}></canvas>\n            {children}\n        </>\n    );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAKA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}