{"version":3,"file":"main.97b7a1561a75c353dd7d.hot-update.js","sources":["webpack:///./src/components/Node.tsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { graphContext } from './Canvas';\n\nexport interface NodeType {\n    uuid?: number;\n    label: string;\n    x: number;\n    y: number;\n}\n\nexport const Node: React.FC<NodeType> = (props) => {\n    const { label, x, y, uuid } = props;\n    const [myGraph, setGraph] = useContext(graphContext);\n\n    useEffect(() => {\n        console.log('rendered');\n        const canvas: any = document?.getElementById('myCanvas');\n        const ctx: any = canvas.getContext('2d');\n        ctx.beginPath();\n        ctx.arc(x, y, 50, 0, Math.PI * 2, true);\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctx.font = '30px Arial';\n        ctx.fillText(label, x - 10, y + 10);\n        setGraph((myGraph: any) => [...myGraph, { uuid: label.charCodeAt(0) * (x + y), label: label, x: x, y: y }]);\n    }, []);\n\n    return <div id={`${label} ${x} ${y}`}></div>;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AASA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAlBA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}